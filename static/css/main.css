* { box-sizing: border-box; }

body {
  font-family: Roboto, sans-serif;
  font-size: 1.2rem;
  line-height: 1.4;
  margin: 0;
}

main {
  padding: 1rem;
  max-width: 70rem;
  margin: auto;
}

section {
  padding: 0;
}

/*.section1, .section2 {
  clear: both;
}*/

p {
  color: #444;
}

ve-image {
  border: 1px solid #ddd;
  box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;
}

ve-header ul,
ve-image-grid ul {
  display: none;
}

mark {
  cursor: pointer;
  background: unset;
  border-bottom: 3px solid #ccc;
  color: #444;
}
mark:hover {
  border-bottom: 3px solid #444;
}
mark::after {
  font-weight: 900; 
  content: "ðŸ”Ž";
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
  top: -0.5em;
  padding-left: 2px;
  padding-right: 4px;
}

p {
  /* These are technically the same, but use both */
  overflow-wrap: break-word;
  word-wrap: break-word;

  -ms-word-break: break-all;
  /* This is the dangerous one in WebKit, as it breaks things wherever */
  word-break: break-all;
  /* Instead use this non-standard one: */
  word-break: break-word;

  /* Adds a hyphen where the word breaks, if supported (No Blink) */
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}

/* Mobile Devices */
@media (max-width: 480px) {
}
  
/* Low resolution devices Tablets, Ipads
@media (min-width: 481px) and (max-width: 767px) {}
*/

/* Tablets, iPads portrait mode
@media (min-width: 768px) and (max-width: 1024px){}
*/

/* Laptops and Desktops */
@media (min-width: 768px) {

  ve-image {
    clear: both;
    position: sticky;
    top: 0;
    width: 45%;
    float: right;
    margin: 0 0 12px 16px;
  }

  ve-image + p, ve-image ~ p,
  ve-image + div, ve-image ~ div,
  ve-image + blockquote, ve-image ~ blockquote {
      width: 53%;
    /* text-align: justify; */
  }
}

/************ Text clamping ***********/
.clamp input, .clamp-2 input, .clamp-5 input, .clamp-10 input, .clamp-15 input, .clamp-20 input,
.clamp label, .clamp-2 label, .clamp-5 label, .clamp-10 label, .clamp-15 label, .clamp-20 label {
  display: unset;
}

.clamp input, .clamp-2 input, .clamp-5 input, .clamp-10 input, .clamp-15 input, .clamp-20 input {
  display: none;
  opacity: 0;
  position: absolute;
  pointer-events: none;
}
.clamp .clamp-wrapper,
.clamp-2 .clamp-wrapper,
.clamp-5 .clamp-wrapper,
.clamp-10 .clamp-wrapper,
.clamp-15 .clamp-wrapper,
.clamp-20 .clamp-wrapper {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
  /* margin-bottom: 6px; */
}
.clamp-2 .clamp-wrapper { -webkit-line-clamp: 2; }
.clamp-5 .clamp-wrapper { -webkit-line-clamp: 5; }
.clamp-10 .clamp-wrapper { -webkit-line-clamp: 10; }
.clamp-15 .clamp-wrapper { -webkit-line-clamp: 15; }
.clamp-20 .clamp-wrapper { -webkit-line-clamp: 20; }

.clamp-wrapper p {
  margin-block-start: 0;
}

.clamp input:focus ~ label,
.clamp-2 input:focus ~ label,
.clamp-5 input:focus ~ label,
.clamp-10 input:focus ~ label,
.clamp-15 input:focus ~ label,
.clamp-20 input:focus ~ label {
  outline: -webkit-focus-ring-color auto 5px;
}
.clamp input:checked + div,
.clamp-2 input:checked + div,
.clamp-5 input:checked + div,
.clamp-10 input:checked + div,
.clamp-15 input:checked + div,
.clamp-20 input:checked + div {
  -webkit-line-clamp: unset;
}
.clamp input:checked ~ label,
.clamp-2 input:checked ~ label, 
.clamp-5 input:checked ~ label, 
.clamp-10 input:checked ~ label, 
.clamp-15 input:checked ~ label, 
.clamp-20 input:checked ~ label, 

.clamp label,
.clamp-2 label,
.clamp-5 label,
.clamp-10 label,
.clamp-15 label,
.clamp-20 label {
  /*
  ;border-radius: 4px;
  padding: 0.2em 0.6em 0.3em 0.6em;
  border: 1px solid #605C2A;
  background-color: #605C2A;
  color: #fff;
  */
  color: #337ab7;
  font-size: 1em;
  cursor: pointer;
}
.clamp label:hover,
.clamp-2 label:hover,
.clamp-5 label:hover,
.clamp-10 label:hover,
.clamp-15 label:hover,
.clamp-20 label:hover {
  text-decoration: underline;
}

.clamp-wrapper:not(.truncated) ~ label { display: none; }
.clamp-wrapper >>> p {
  margin-bottom: 0;
}
/************ End text clamping ***********/

pre { line-height: 125%; }
td.linenos .normal { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }
span.linenos { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }
td.linenos .special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }
span.linenos.special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }
.codehilite .hll { background-color: #ffffcc }
.codehilite { background: #f8f8f8; }
.codehilite .c { color: #3D7B7B; font-style: italic } /* Comment */
.codehilite .err { border: 1px solid #FF0000 } /* Error */
.codehilite .k { color: #008000; font-weight: bold } /* Keyword */
.codehilite .o { color: #666666 } /* Operator */
.codehilite .ch { color: #3D7B7B; font-style: italic } /* Comment.Hashbang */
.codehilite .cm { color: #3D7B7B; font-style: italic } /* Comment.Multiline */
.codehilite .cp { color: #9C6500 } /* Comment.Preproc */
.codehilite .cpf { color: #3D7B7B; font-style: italic } /* Comment.PreprocFile */
.codehilite .c1 { color: #3D7B7B; font-style: italic } /* Comment.Single */
.codehilite .cs { color: #3D7B7B; font-style: italic } /* Comment.Special */
.codehilite .gd { color: #A00000 } /* Generic.Deleted */
.codehilite .ge { font-style: italic } /* Generic.Emph */
.codehilite .gr { color: #E40000 } /* Generic.Error */
.codehilite .gh { color: #000080; font-weight: bold } /* Generic.Heading */
.codehilite .gi { color: #008400 } /* Generic.Inserted */
.codehilite .go { color: #717171 } /* Generic.Output */
.codehilite .gp { color: #000080; font-weight: bold } /* Generic.Prompt */
.codehilite .gs { font-weight: bold } /* Generic.Strong */
.codehilite .gu { color: #800080; font-weight: bold } /* Generic.Subheading */
.codehilite .gt { color: #0044DD } /* Generic.Traceback */
.codehilite .kc { color: #008000; font-weight: bold } /* Keyword.Constant */
.codehilite .kd { color: #008000; font-weight: bold } /* Keyword.Declaration */
.codehilite .kn { color: #008000; font-weight: bold } /* Keyword.Namespace */
.codehilite .kp { color: #008000 } /* Keyword.Pseudo */
.codehilite .kr { color: #008000; font-weight: bold } /* Keyword.Reserved */
.codehilite .kt { color: #B00040 } /* Keyword.Type */
.codehilite .m { color: #666666 } /* Literal.Number */
.codehilite .s { color: #BA2121 } /* Literal.String */
.codehilite .na { color: #687822 } /* Name.Attribute */
.codehilite .nb { color: #008000 } /* Name.Builtin */
.codehilite .nc { color: #0000FF; font-weight: bold } /* Name.Class */
.codehilite .no { color: #880000 } /* Name.Constant */
.codehilite .nd { color: #AA22FF } /* Name.Decorator */
.codehilite .ni { color: #717171; font-weight: bold } /* Name.Entity */
.codehilite .ne { color: #CB3F38; font-weight: bold } /* Name.Exception */
.codehilite .nf { color: #0000FF } /* Name.Function */
.codehilite .nl { color: #767600 } /* Name.Label */
.codehilite .nn { color: #0000FF; font-weight: bold } /* Name.Namespace */
.codehilite .nt { color: #008000; font-weight: bold } /* Name.Tag */
.codehilite .nv { color: #19177C } /* Name.Variable */
.codehilite .ow { color: #AA22FF; font-weight: bold } /* Operator.Word */
.codehilite .w { color: #bbbbbb } /* Text.Whitespace */
.codehilite .mb { color: #666666 } /* Literal.Number.Bin */
.codehilite .mf { color: #666666 } /* Literal.Number.Float */
.codehilite .mh { color: #666666 } /* Literal.Number.Hex */
.codehilite .mi { color: #666666 } /* Literal.Number.Integer */
.codehilite .mo { color: #666666 } /* Literal.Number.Oct */
.codehilite .sa { color: #BA2121 } /* Literal.String.Affix */
.codehilite .sb { color: #BA2121 } /* Literal.String.Backtick */
.codehilite .sc { color: #BA2121 } /* Literal.String.Char */
.codehilite .dl { color: #BA2121 } /* Literal.String.Delimiter */
.codehilite .sd { color: #BA2121; font-style: italic } /* Literal.String.Doc */
.codehilite .s2 { color: #BA2121 } /* Literal.String.Double */
.codehilite .se { color: #AA5D1F; font-weight: bold } /* Literal.String.Escape */
.codehilite .sh { color: #BA2121 } /* Literal.String.Heredoc */
.codehilite .si { color: #A45A77; font-weight: bold } /* Literal.String.Interpol */
.codehilite .sx { color: #008000 } /* Literal.String.Other */
.codehilite .sr { color: #A45A77 } /* Literal.String.Regex */
.codehilite .s1 { color: #BA2121 } /* Literal.String.Single */
.codehilite .ss { color: #19177C } /* Literal.String.Symbol */
.codehilite .bp { color: #008000 } /* Name.Builtin.Pseudo */
.codehilite .fm { color: #0000FF } /* Name.Function.Magic */
.codehilite .vc { color: #19177C } /* Name.Variable.Class */
.codehilite .vg { color: #19177C } /* Name.Variable.Global */
.codehilite .vi { color: #19177C } /* Name.Variable.Instance */
.codehilite .vm { color: #19177C } /* Name.Variable.Magic */
.codehilite .il { color: #666666 } /* Literal.Number.Integer.Long */
